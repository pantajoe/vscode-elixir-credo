{
  "name": "vscode-elixir-credo",
  "publisher": "pantajoe",
  "author": {
    "name": "pantajoe",
    "url": "https://www.github.com/pantajoe"
  },
  "displayName": "Credo (Elixir Linter)",
  "description": "VSC Support for Elixir linter 'Credo'.",
  "version": "0.7.2",
  "engines": {
    "vscode": "^1.62.0"
  },
  "icon": "images/elixir.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/pantajoe/vscode-elixir-credo.git"
  },
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "elixir",
    "credo",
    "linter"
  ],
  "activationEvents": [
    "onLanguage:elixir"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "elixir",
        "extensions": [
          ".ex",
          ".exs"
        ]
      }
    ],
    "configuration": [
      {
        "title": "Credo (Elixir Linter)",
        "properties": {
          "elixir.credo.configurationFile": {
            "title": "Configuration File",
            "markdownDescription": "Configures which configuration file Credo should use. Default is `.credo.exs`.",
            "type": "string",
            "default": ".credo.exs",
            "scope": "resource"
          },
          "elixir.credo.credoConfiguration": {
            "title": "Credo Configuration Name",
            "description": "Configures the name of the used configuration (Credo supports having multiple configurations).",
            "type": "string",
            "default": "default",
            "scope": "resource"
          },
          "elixir.credo.executePath": {
            "title": "Execute Path",
            "markdownDescription": "Specifies the execute path where mix can be run from, e.g., `/usr/bin/.asdf/shims`",
            "type": "string",
            "default": ""
          },
          "elixir.credo.strictMode": {
            "title": "Strict Mode",
            "description": "Specifies whether to activate Credo's strict mode",
            "type": "boolean",
            "default": false,
            "scope": "resource"
          },
          "elixir.credo.checksWithTag": {
            "title": "Checks With Tag",
            "markdownDescription": "Only include checks that match the given tag. This setting takes precedence over `#elixir.credo.checksWithoutTag#`.\n\n(see [Credo Docs](https://hexdocs.pm/credo/check_params.html#tags))",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string"
            },
            "scope": "resource"
          },
          "elixir.credo.checksWithoutTag": {
            "title": "Checks Without Tag",
            "markdownDescription": "Ignore checks that match the given tag. This setting is overridden by `#elixir.credo.checksWithTag#`.\n\n(see [Credo Docs](https://hexdocs.pm/credo/check_params.html#tags))",
            "type": "array",
            "default": [],
            "uniqueItems": true,
            "items": {
              "type": "string"
            },
            "scope": "resource"
          },
          "elixir.credo.ignoreWarningMessages": {
            "title": "Ignore Warning Messages",
            "markdownDescription": "Ignore messages like `Found multiple files ...`, `.. file does not exist. Ignoring ...`",
            "type": "boolean",
            "default": false
          },
          "elixir.credo.lintEverything": {
            "title": "Lint Everything",
            "markdownDescription": "Lint every Elixir file, regardless of your `.credo.exs` config",
            "type": "boolean",
            "default": false,
            "scope": "resource"
          },
          "elixir.credo.enableDebug": {
            "title": "Enable Debug Mode",
            "description": "Enable extensive logging to the output channel",
            "type": "boolean",
            "default": false
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/chai": "^4.2.12",
    "@types/glob": "^7.1.1",
    "@types/mocha": "^9.0.0",
    "@types/node": "^14.17.0",
    "@types/sinon": "^10.0.6",
    "@types/vscode": "^1.47.0",
    "@typescript-eslint/eslint-plugin": "^5.6.0",
    "@typescript-eslint/parser": "^5.9.0",
    "bdd-lazy-var": "^2.6.1",
    "chai": "^4.2.0",
    "eslint": "^8.4.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "glob": "^7.1.6",
    "mocha": "^9.0.0",
    "prettier": "^2.5.1",
    "sinon": "^12.0.0",
    "typescript": "^4.4.0",
    "vscode-test": "^1.6.0"
  }
}
